<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="board.dao.face.BoardDao" >
	
	<select id="selectNoticeCntAll" parameterType="string" resultType="int" >
		SELECT count(*) cnt FROM notice
		WHERE noticetitle LIKE '%${search}%'
	</select>
	
	<select id="selectNoticeAll" parameterType="util.Paging" resultType="hashmap">
		SELECT * FROM(
    		SELECT rownum rnum, S.* 
    		FROM (
    			SELECT noticeno,
        			NOTICETITLE,
        			noticecontent,
        			noticewritedate,
        			N.userno,
        			boardtypeno,
        			M.username 
        		FROM notice N, member M
        		WHERE noticetitle LIKE '%${search}%' AND n.userno = m.userno
				ORDER BY noticeno DESC
        		) S
    	)
		WHERE rnum BETWEEN #{startNo} AND #{endNo}
	</select>
	
	<select id="selectNoticeByNoticeno" parameterType="int" resultType="board.dto.Notice">
		SELECT * FROM notice
		WHERE noticeno = #{noticeno}
	</select>
	
	<select id="selectCareCntAll" parameterType="string" resultType="int">
		SELECT count(*) FROM board
		WHERE boardtitle LIKE '%${search}%' 
			AND boardtypeno = 1
	</select>
	
	
	<select id="selectCareAll" parameterType="util.Paging" resultType="hashmap">
		SELECT * FROM(
        	SELECT rownum rnum, S.* 
        	FROM ( 
            	SELECT B.boardno,
                	boardtitle,
                	content,
                	write_date AS writedate,
                	hit,
                	B.userno,
                	B.boardtypeno,
                	M.userid,
                	(SELECT count(*) FROM boardrecommend R WHERE B.boardno = R.boardno) AS recommend,
                	(SELECT count(*) FROM commenttable C WHERE C.boardno = B.boardno ) AS commentno,
                	bf.originname,
                	bf.storedname
                FROM Board B, Member M, BoardFile BF
                WHERE boardtitle LIKE '%${search}%' AND boardtypeno=1 AND B.userno = M.userno
                AND BF.fileno = (SELECT max(fileno) FROM boardFile BF WHERE B.boardno = BF.boardno(+))
            	ORDER BY boardno DESC
			) S
        )
		WHERE rnum BETWEEN #{startNo} AND #{endNo}
	</select>
	
	<select id="selectUsernoByUserid" parameterType="string" resultType="int">
		select userno
		FROM member
		WHERE userid = #{loginid}
	</select>
	
	<select id="selectBoardSeqNext" resultType="int">
		SELECT seq_board.nextval FROM dual
	</select>
	
	<insert id="insertCareBoard" parameterType="board.dto.Board">
		INSERT INTO board (boardno, boardtitle, content, write_date, hit, userno, boardtypeno)
		VALUES (#{boardNo}, #{boardTitle}, #{content}, sysdate, 0, #{userNo}, 1 )
	</insert>
	
	<select id="selectCareBoardFile" parameterType="int" resultType="board.dto.BoardFile">
		SELECT * FROM boardfile
		WHERE boardNo = #{boardNo}
		ORDER BY fileno
	</select>
	
	<select id="selectRecommendCntByBoardNoUserNo" resultType="int" parameterType="hashmap">
		SELECT count(*) FROM boardrecommend
		WHERE boardNo = #{boardNo} AND userNo = #{userNo}
	</select>
	
	<insert id="insertRecommendToCare" parameterType="hashmap">
		INSERT INTO boardrecommend (boardrecomno, boardno, userno)
		VALUES ( seq_boardrecommend.nextval, #{boardNo}, #{userNo} )
	</insert>
	
	<delete id="deleteRecommendToCare" parameterType="hashmap">
		DELETE boardrecommend
		WHERE boardNo=#{boardNo} AND userNo=#{userNo}
	</delete>
	
	<select id="selectRecommendCnt" parameterType="int" resultType="int">
		SELECT count(*) FROM boardrecommend
		WHERE boardno=#{boardNo}
	</select>
	
	<insert id="insertCommentToCareBoard" parameterType="board.dto.Comment" >
		INSERT INTO commenttable (commentno, content, write_date, boardno, userno, depth, organization, sortno, refcommentno)
		VALUES ( #{commentNo}, #{content}, sysdate, #{boardNo}, #{userNo}, #{depth}, #{organization}, #{sortNo}, 0 )
	</insert>
	
	<select id="selectCommentByBoardno" parameterType="int" resultType="hashmap">
		SELECT * FROM commenttable
		WHERE boardno = #{boardno}
		ORDER BY organization DESC, sortno
	</select>
	
	<select id="selectNoticeToCare" resultType="hashmap">
		SELECT *
		FROM(
    		SELECT rownum rnum, n.*
    		FROM (
        		SELECT * FROM notice
        		WHERE boardtypeno = 1
        		ORDER BY noticeno DESC) n
		)
		WHERE rnum BETWEEN 1 AND 3
	</select>
	
	<select id="selectSortNoByRef" parameterType="int" resultType="int">
		SELECT sortNo FROM commenttable
		WHERE commentno = #{refCommentNo}
	</select>
	
	<update id="updateAfterSortnoUpper" parameterType="hashmap">
		UPDATE commenttable set sortno = sortno + 1
		WHERE organization = #{organization}
		 AND sortno > (SELECT sortno FROM commenttable WHERE commentno = #{refcommentno})
	</update>
	
	<select id="selectRefOrgan" parameterType="int" resultType="int">
		SELECT organization FROM commenttable
		WHERE commentno = #{refcommentno}
	</select>
	
	<update id="deleteByUpdateBoardType" parameterType="board.dto.Board">
		UPDATE board SET boardtypeno = 5
		WHERE boardno = #{boardNo}
	</update>
	
	<select id="getMemberByBoardMap" parameterType="hashmap" resultType="member.dto.Member">
		SELECT userno, username, address, detailaddress, zipcode, latitude, longitude FROM member
		WHERE userno = #{USERNO}
	</select>
	
	<!-- ===============================제균=============================== -->
	
	
	<select id = "selectFreeBoardCnt"  parameterType="string" resultType = "int">
		SELECT count(*)
		FROM board
		WHERE boardtypeno = 2
					 AND content LIKE '%'||#{search}||'%' 
					 OR boardtypeno = 2 AND boardtitle LIKE '%'||#{search}||'%' 
	</select>
	<select id = "selectMarketBoardCnt"  parameterType="string" resultType = "int">
		SELECT count(*)
		FROM board
		WHERE boardtypeno = 3 
					AND content LIKE '%'||#{search}||'%'
					OR boardtypeno = 3 AND boardtitle LIKE '%'||#{search}||'%'
	</select>
	
	<select id = "selectMarketList" parameterType="util.Paging" resultType = "map">
		SELECT * FROM(
			SELECT rownum rnum,
                    (select count(*)
                    from boardrecommend C
                    where C.boardno = B.boardno) AS recommend  
                    
                    , (select count(*)
                    from commenttable C
                    where C.boardno = B.boardno) AS commentCnt 
                    
                    , B.* FROM(
				SELECT board.boardno, boardtitle, username, write_date AS writeDate, hit
                        , member.userno, boardtypeno
				FROM board, member
				
				WHERE board.userno = member.userno AND boardtypeno = 3 AND content like '%'||#{search}||'%' OR
						board.userno = member.userno AND boardtypeno = 3 AND boardtitle like '%'||#{search}||'%'
				ORDER BY boardno desc
			)B
		)
		WHERE rnum BETWEEN #{startNo} AND #{endNo}
	</select>
	<select id = "selectFreeList" parameterType="util.Paging" resultType = "map">
		SELECT * FROM(
			SELECT rownum rnum,
                    (select count(*)
                    from boardrecommend C
                    where C.boardno = B.boardno) AS recommend  
                    
                    , (select count(*)
                    from commenttable C
                    where C.boardno = B.boardno) AS commentCnt 
                    
                    , B.* FROM(
				SELECT board.boardno, boardtitle, username, write_date AS writeDate, hit
                        , member.userno, boardtypeno
				FROM board, member
				
				WHERE board.userno = member.userno AND boardtypeno = 2 AND content like '%'||#{search}||'%' OR
						board.userno = member.userno AND boardtypeno = 2 AND boardtitle like '%'||#{search}||'%'
				ORDER BY boardno desc
			)B
		)
		WHERE rnum BETWEEN #{startNo} AND #{endNo}
	</select>
	<select id = "selectNotice"  parameterType="hashmap" resultType = "map">
		SELECT  *
		FROM(
		    SELECT rownum rnum, noticeno, noticetitle, noticecontent, noticewritedate, userno, boardtypeno
		    FROM notice
		    where boardtypeno = #{category}
		    ORDER BY noticeno desc
		) 
		WHERE rnum BETWEEN #{max}-2 AND #{max }
		ORDER BY rnum desc   
	</select>
	<select id = "selectNoticeCnt" parameterType="int" resultType = "int">
		select count(*)
  		from notice
 		where boardtypeno = #{category}
	</select>
	<select id="selectBoardNext" resultType="int">
		select seq_board.nextval  
		from dual
	</select>
	<insert id="insertBoard" parameterType="board.dto.Board">
		insert into board(boardno, boardtitle, content, write_date, hit, userno, boardtypeno)
		values(#{boardNo}, #{boardTitle}, #{content}, sysdate, #{hit}, #{userNo}, #{ boardTypeNo})
	</insert>
	<!-- 이름 겹침 -->
	<insert id="insertBoardFile" parameterType="map">
		insert into boardfile(fileno, originname, storedname, filesize, boardno)
		values(seq_boardfile.nextval, #{originName}, #{storedName}, #{fileSize}, #{boardNo})
	</insert>
	<select id="selectBoardOne" parameterType="int" resultType="map">
		select boardno, boardtitle, content, hit, boardtypeno, member.userno, username, userid
																, write_date AS writeDate 
																, (select count(*) 
                                                                from boardrecommend R, board 
                                                                where R.boardno = board.boardno AND board.boardno= #{boardno}) AS recommend
		from board, member
		where board.userno = member.userno AND boardno = #{boardno}
	</select>
	<select id="selectFiles" parameterType="int" resultType="board.dto.BoardFile">
		select fileno, originname, storedname, filesize, boardno
		from boardfile
		where boardno = #{boardno}
	</select> 
	<update id="updateBoard" parameterType="int">
		update board set boardTypeNo = 5
		where boardno = #{boardNo}
	</update>
	<select id="selectReportBoard" parameterType="int"  resultType="int">
		select count(*)
		from reportboard
		where boardNo = #{boardNo}
	</select>
	<delete id="deleteBoardFile" parameterType="int">
		delete from boardfile
		where boardno = #{boardno}
	</delete>
	<delete id="deleteBoard">
		delete from board
		where boardno = #{boardno}
	</delete>
	<select id="selectIsReport" parameterType="board.dto.ReportBoard" resultType="int">
		select count(*)
		from reportboard
		where boardNo = #{boardNo} AND userNo = #{userNo}
	</select>
	<insert id="insertReport" parameterType="board.dto.ReportBoard">
		insert into reportboard(BOREPORTNO, reportdetail, report_date, complete, userno, boardno)
		values(SEQ_REPORTBOARD.nextval , #{reportDetail}, sysdate, 'N', #{userNo}, #{boardNo})
	</insert>
	<select id="selectIsReco" parameterType="board.dto.BoardRecommend" resultType="int">
		select count(*)
		from boardrecommend
		where boardNo = #{boardNo} AND userNo = #{userNo}
	</select>
	<insert id="insertBoardReco" parameterType="board.dto.BoardRecommend">
		insert into boardrecommend(boardRecomNo, boardNo, userNo)
		values (seq_boardrecommend.nextval, #{boardNo}, #{userNo})
	</insert>
	<select id="checkReco" parameterType="board.dto.BoardRecommend" resultType="int">
		select count(*)
		from boardrecommend
		where userNo = #{userNo} AND boardNo = #{boardNo}
	</select>
	<delete id="deleteReco" parameterType="board.dto.BoardRecommend" >
		delete  from boardrecommend
		where userNo = #{userNo} AND boardNo = #{boardNo}
	</delete>
	<select id="selectCntReco" parameterType="board.dto.BoardRecommend" resultType="int">
		select count(*) from boardrecommend
		where boardNo = #{boardNo}
	</select>
	<select id="selectComments" parameterType="map" resultType="map">
		select * from(
   			select * from(
        		select DENSE_RANK() OVER(order by organization) AS cnt
                    ,commentno, content, write_date AS writeDate, member.userNo, depth, member.username
                    , organization
                    , sortno
        		from commenttable, member
        		where boardNo = #{boardNo} and member.userno = commenttable.userno
        		order by organization, sortno
    			)
    		order by cnt desc, sortno
		)    
		where cnt between #{min} and #{max}
	</select>
	<select id="selectMaxCommentNo" resultType="int">
		select seq_commenttable.nextval
		from dual
	</select>
	<select id="selectCommentByCommentNo" parameterType="int" resultType="board.dto.Comment">
		select commentNo, content, write_date AS writeDate, boardNo, userNo, depth
		from commenttable
		where commentNo = #{commentNo}
	</select>
	<select id="selectUserNameByUserNo" parameterType="int" resultType="string">
		select userName
		from member
		where userno = #{userNo}
	</select>
	<insert id="insertComment" parameterType="board.dto.Comment">
		insert into commenttable(commentNo, content, write_date, boardNo, userNo, depth, organization, sortNo, REFCOMMENTNO)
		values (#{commentNo}, #{content}, sysdate, #{boardNo}, #{userNo}, #{depth}, #{organization}, #{sortNo}, 0)
	</insert>
	<select id="selectDepthAndSortNo" parameterType="int" resultType="map">
		select sortNo, depth, organization
		from commenttable
		where commentNo = #{commentNo}
	</select>
	<update id="updatePlueSortNo" parameterType="map">
		update commenttable 
		set sortno = sortNo + 1 
		where organization = #{ORGANIZATION} and sortno > #{SORTNO}  
	</update>
	<select id="selectMaxCommentCnt" resultType="int" parameterType="int">
		select max(cnt)
		from(
		select * from(
		        select DENSE_RANK() OVER(order by organization) AS cnt
		                    ,commentno, content, write_date AS writeDate, member.userNo, depth, member.username
		                    , organization
		                    , sortno
		        from commenttable, member
		        where boardNo = #{boardNo} and member.userno = commenttable.userno
		        order by organization, sortno
		    )
		    order by cnt desc, sortno
		)
	</select>
	<update id="updateComment" parameterType="int">
		update commenttable
		set content = '작성자가 삭제한 댓글입니다.'
		where commentNo = #{commentNo}
	</update>
</mapper>