<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/batch https://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
   
   <!-- Root Context: defines shared resources visible to all other web components -->
   
   <mvc:annotation-driven />
   <context:component-scan base-package="**.service">
   		<context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
   </context:component-scan>
   
   <!-- DB접속 정보 -->
   <bean id= "dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
      <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"></property>
      <property name="url" value="jdbc:oracle:thin:@(description= (retry_count=20)(retry_delay=3)(address=(protocol=tcps)(port=1521)(host=adb.ap-chuncheon-1.oraclecloud.com))(connect_data=(service_name=gf9614238fce024_petpan_medium.adb.oraclecloud.com))(security=(ssl_server_dn_match=yes)))"/>
      <property name="username" value="ADMIN"/>
      <property name="password" value="Rkdekqlsqkqh123!"/>
   </bean>
   

   <!-- 마이바티스 수행 객체 설정 (SqlSession) -->
   <bean id="SqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
      
      <!-- 스프링 빈으로 등록된 dataSource를 이용한 DB접속 정보 설정 -->
      <property name="dataSource" ref="dataSource"/>

      <!-- 마이바티스 설정 파일(XML)의 위치 지정하기 -->
<!--       <property name="configLocation" ref="classpath:/myBatis-config.xml"/> -->

      <!-- mapper XML파일의 위치 설정-->
      <property name="mapperLocations">
         <array>
            <!-- ** : 모든 폴더 구조 -->
            <!-- * : 모든 단어 -->
            <value>classpath:/**/dao/**/*Mapper.xml</value>
         </array>
      </property>
   		
   </bean>
   
   <!-- 마이바티스를 이용하는 인턴페이스 설정(DAO설정) -->
   <!-- Mapper XML의 newspace속성에 맞는 인터페이스를 찾는 패키지 -->
   <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
      <property name="basePackage" value="admin.dao, board.dao, main.dao, member.dao, shop.dao, message.dao"/>
   </bean>



   <!-- 이메일 인증 관련 빈 등록 -->
   <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
      <property name="host" value="smtp.gmail.com" />
      <property name="port" value="587" />
      <property name="username" value="dabin9872@gmail.com" />
      <property name="password" value="rahlxmbqsreqvbay" />
      <property name="javaMailProperties">
         <props>
                <prop key="mail.transport.protocol">smtp</prop>
                <prop key="mail.smtp.auth">true</prop>
                <!-- gmail의 경우 보안문제 업데이트로 인해 SSLSocketFactory를 추가해야 smtp 사용 가능. -->
                <prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
                <prop key="mail.smtp.starttls.enable">true</prop>
                <prop key="mail.debug">true</prop>
                <prop key="mail.smtp.ssl.trust">smtp.gmail.com</prop>
				<prop key="mail.smtp.ssl.protocols">TLSv1.2</prop>
            </props>
      </property>
      
   </bean>
   
   	<!-- 트랜잭션 매니저 스프링 빈 설정 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<bean id="task1" class="admin.batch.task.DeleteMessageTaskLet" />
	<batch:job id="deleteMessage">
		<batch:step id="deleteStep">
			<batch:tasklet ref="task1" />
		</batch:step>
	</batch:job>

	<bean id="task2" class="admin.batch.task.MessageToAllTasklet" />
	<batch:job id="messageToAll">
		<batch:step id="SendStep">
			<batch:tasklet ref="task2" />
		</batch:step>
	</batch:job>
	
	
	<!-- 스프링 배치의 metadata를 담당하는 빈. -->
	<bean id="jobRepository"
		class="org.springframework.batch.core.repository.support.JobRepositoryFactoryBean">
		<property name="transactionManager" ref="transactionManager" />
		<property name="dataSource" ref="dataSource" />
		<property name="isolationLevelForCreate"
			value="ISOLATION_DEFAULT" />
	</bean>

 	<!-- 스프링 배치 job을 실행하는 빈. --> 
	<bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository" />
	</bean>

	
	<bean id="jobRegistry" class="org.springframework.batch.core.configuration.support.MapJobRegistry" />
 
	<bean class="org.springframework.batch.core.configuration.support.JobRegistryBeanPostProcessor">
		<property name="jobRegistry" ref="jobRegistry" />
	</bean>
 
	<bean id="jobOperator" class="org.springframework.batch.core.launch.support.SimpleJobOperator">
		<property name="jobLauncher" ref="jobLauncher" />
		<property name="jobExplorer" ref="jobExplorer" />
		<property name="jobRepository" ref="jobRepository" />
		<property name="jobRegistry" ref="jobRegistry" />
	</bean>
 
	<bean id="jobExplorer" class="org.springframework.batch.core.explore.support.JobExplorerFactoryBean">
		<property name="dataSource" ref="dataSource" />
	</bean>


<!-- 	<bean id="quartzJob" class="org.springframework.scheduling.quartz.JobDetailFactoryBean"> -->
<!-- 		<property name="jobClass" value="admin.quartz.QuartzJob"/> -->
<!-- 		<property name="jobDataAsMap"> -->
<!-- 			<map> -->
<!-- 				<entry key="quartzService" value-ref="quartzService" /> -->
<!-- 			</map> -->
<!-- 		</property> -->
<!-- 	</bean> -->
   
<!--    	<bean id="jobExcueteTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean"> -->
<!-- 		<property name="jobDetail" ref="quartzJob"/> -->
		

<!-- 		매일 12시간마다 한번씩 실행.  -->
<!-- 		<property name="cronExpression" value="0 0 0/12 1/1 * ? *"/> -->

<!-- 			(0초 시작 5초마다)초 매분 매시 매일 매월 (설정없음)요일 매년 -->
<!-- 			<property name="cronExpression" value="0/5 * * * * ? *"/> -->
<!-- 	</bean> -->

	
<!-- 	<bean id="scheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean"> -->
<!-- 		<property name="triggers"> -->
<!-- 			<list> -->
<!-- 				<ref bean="jobExcueteTrigger"/> -->
<!-- 			</list> -->
<!-- 		</property> -->
<!-- 	</bean> -->
   
</beans>

